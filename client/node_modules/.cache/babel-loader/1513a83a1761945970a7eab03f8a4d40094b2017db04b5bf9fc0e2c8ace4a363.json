{"ast":null,"code":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar SafeBuffer = require('safe-buffer');\nObject.defineProperty(exports, 'commentRegex', {\n  get: function getCommentRegex() {\n    return /^\\s*\\/(?:\\/|\\*)[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/mg;\n  }\n});\nObject.defineProperty(exports, 'mapFileCommentRegex', {\n  get: function getMapFileCommentRegex() {\n    // Matches sourceMappingURL in either // or /* comment styles.\n    return /(?:\\/\\/[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+?)[ \\t]*$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^\\*]+?)[ \\t]*(?:\\*\\/){1}[ \\t]*$)/mg;\n  }\n});\nfunction decodeBase64(base64) {\n  return SafeBuffer.Buffer.from(base64, 'base64').toString();\n}\nfunction stripComment(sm) {\n  return sm.split(',').pop();\n}\nfunction readFromFileMap(sm, dir) {\n  // NOTE: this will only work on the server since it attempts to read the map file\n\n  var r = exports.mapFileCommentRegex.exec(sm);\n\n  // for some odd reason //# .. captures in 1 and /* .. */ in 2\n  var filename = r[1] || r[2];\n  var filepath = path.resolve(dir, filename);\n  try {\n    return fs.readFileSync(filepath, 'utf8');\n  } catch (e) {\n    throw new Error('An error occurred while trying to read the map file at ' + filepath + '\\n' + e);\n  }\n}\nfunction Converter(sm, opts) {\n  opts = opts || {};\n  if (opts.isFileComment) sm = readFromFileMap(sm, opts.commentFileDir);\n  if (opts.hasComment) sm = stripComment(sm);\n  if (opts.isEncoded) sm = decodeBase64(sm);\n  if (opts.isJSON || opts.isEncoded) sm = JSON.parse(sm);\n  this.sourcemap = sm;\n}\nConverter.prototype.toJSON = function (space) {\n  return JSON.stringify(this.sourcemap, null, space);\n};\nConverter.prototype.toBase64 = function () {\n  var json = this.toJSON();\n  return SafeBuffer.Buffer.from(json, 'utf8').toString('base64');\n};\nConverter.prototype.toComment = function (options) {\n  var base64 = this.toBase64();\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n\n// returns copy instead of original\nConverter.prototype.toObject = function () {\n  return JSON.parse(this.toJSON());\n};\nConverter.prototype.addProperty = function (key, value) {\n  if (this.sourcemap.hasOwnProperty(key)) throw new Error('property \"' + key + '\" already exists on the sourcemap, use set property instead');\n  return this.setProperty(key, value);\n};\nConverter.prototype.setProperty = function (key, value) {\n  this.sourcemap[key] = value;\n  return this;\n};\nConverter.prototype.getProperty = function (key) {\n  return this.sourcemap[key];\n};\nexports.fromObject = function (obj) {\n  return new Converter(obj);\n};\nexports.fromJSON = function (json) {\n  return new Converter(json, {\n    isJSON: true\n  });\n};\nexports.fromBase64 = function (base64) {\n  return new Converter(base64, {\n    isEncoded: true\n  });\n};\nexports.fromComment = function (comment) {\n  comment = comment.replace(/^\\/\\*/g, '//').replace(/\\*\\/$/g, '');\n  return new Converter(comment, {\n    isEncoded: true,\n    hasComment: true\n  });\n};\nexports.fromMapFileComment = function (comment, dir) {\n  return new Converter(comment, {\n    commentFileDir: dir,\n    isFileComment: true,\n    isJSON: true\n  });\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromSource = function (content) {\n  var m = content.match(exports.commentRegex);\n  return m ? exports.fromComment(m.pop()) : null;\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromMapFileSource = function (content, dir) {\n  var m = content.match(exports.mapFileCommentRegex);\n  return m ? exports.fromMapFileComment(m.pop(), dir) : null;\n};\nexports.removeComments = function (src) {\n  return src.replace(exports.commentRegex, '');\n};\nexports.removeMapFileComments = function (src) {\n  return src.replace(exports.mapFileCommentRegex, '');\n};\nexports.generateMapFileComment = function (file, options) {\n  var data = 'sourceMappingURL=' + file;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};","map":{"version":3,"names":["fs","require","path","SafeBuffer","Object","defineProperty","exports","get","getCommentRegex","getMapFileCommentRegex","decodeBase64","base64","Buffer","from","toString","stripComment","sm","split","pop","readFromFileMap","dir","r","mapFileCommentRegex","exec","filename","filepath","resolve","readFileSync","e","Error","Converter","opts","isFileComment","commentFileDir","hasComment","isEncoded","isJSON","JSON","parse","sourcemap","prototype","toJSON","space","stringify","toBase64","json","toComment","options","data","multiline","toObject","addProperty","key","value","hasOwnProperty","setProperty","getProperty","fromObject","obj","fromJSON","fromBase64","fromComment","comment","replace","fromMapFileComment","fromSource","content","m","match","commentRegex","fromMapFileSource","removeComments","src","removeMapFileComments","generateMapFileComment","file"],"sources":["/Users/timothyjensen/Development/code/phase-5/phase-5-project-the-vault/client/node_modules/convert-source-map/index.js"],"sourcesContent":["'use strict';\nvar fs = require('fs');\nvar path = require('path');\nvar SafeBuffer = require('safe-buffer');\n\nObject.defineProperty(exports, 'commentRegex', {\n  get: function getCommentRegex () {\n    return /^\\s*\\/(?:\\/|\\*)[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/mg;\n  }\n});\n\nObject.defineProperty(exports, 'mapFileCommentRegex', {\n  get: function getMapFileCommentRegex () {\n    // Matches sourceMappingURL in either // or /* comment styles.\n    return /(?:\\/\\/[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+?)[ \\t]*$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^\\*]+?)[ \\t]*(?:\\*\\/){1}[ \\t]*$)/mg;\n  }\n});\n\n\nfunction decodeBase64(base64) {\n  return SafeBuffer.Buffer.from(base64, 'base64').toString();\n}\n\nfunction stripComment(sm) {\n  return sm.split(',').pop();\n}\n\nfunction readFromFileMap(sm, dir) {\n  // NOTE: this will only work on the server since it attempts to read the map file\n\n  var r = exports.mapFileCommentRegex.exec(sm);\n\n  // for some odd reason //# .. captures in 1 and /* .. */ in 2\n  var filename = r[1] || r[2];\n  var filepath = path.resolve(dir, filename);\n\n  try {\n    return fs.readFileSync(filepath, 'utf8');\n  } catch (e) {\n    throw new Error('An error occurred while trying to read the map file at ' + filepath + '\\n' + e);\n  }\n}\n\nfunction Converter (sm, opts) {\n  opts = opts || {};\n\n  if (opts.isFileComment) sm = readFromFileMap(sm, opts.commentFileDir);\n  if (opts.hasComment) sm = stripComment(sm);\n  if (opts.isEncoded) sm = decodeBase64(sm);\n  if (opts.isJSON || opts.isEncoded) sm = JSON.parse(sm);\n\n  this.sourcemap = sm;\n}\n\nConverter.prototype.toJSON = function (space) {\n  return JSON.stringify(this.sourcemap, null, space);\n};\n\nConverter.prototype.toBase64 = function () {\n  var json = this.toJSON();\n  return SafeBuffer.Buffer.from(json, 'utf8').toString('base64');\n};\n\nConverter.prototype.toComment = function (options) {\n  var base64 = this.toBase64();\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n\n// returns copy instead of original\nConverter.prototype.toObject = function () {\n  return JSON.parse(this.toJSON());\n};\n\nConverter.prototype.addProperty = function (key, value) {\n  if (this.sourcemap.hasOwnProperty(key)) throw new Error('property \"' + key + '\" already exists on the sourcemap, use set property instead');\n  return this.setProperty(key, value);\n};\n\nConverter.prototype.setProperty = function (key, value) {\n  this.sourcemap[key] = value;\n  return this;\n};\n\nConverter.prototype.getProperty = function (key) {\n  return this.sourcemap[key];\n};\n\nexports.fromObject = function (obj) {\n  return new Converter(obj);\n};\n\nexports.fromJSON = function (json) {\n  return new Converter(json, { isJSON: true });\n};\n\nexports.fromBase64 = function (base64) {\n  return new Converter(base64, { isEncoded: true });\n};\n\nexports.fromComment = function (comment) {\n  comment = comment\n    .replace(/^\\/\\*/g, '//')\n    .replace(/\\*\\/$/g, '');\n\n  return new Converter(comment, { isEncoded: true, hasComment: true });\n};\n\nexports.fromMapFileComment = function (comment, dir) {\n  return new Converter(comment, { commentFileDir: dir, isFileComment: true, isJSON: true });\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromSource = function (content) {\n  var m = content.match(exports.commentRegex);\n  return m ? exports.fromComment(m.pop()) : null;\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromMapFileSource = function (content, dir) {\n  var m = content.match(exports.mapFileCommentRegex);\n  return m ? exports.fromMapFileComment(m.pop(), dir) : null;\n};\n\nexports.removeComments = function (src) {\n  return src.replace(exports.commentRegex, '');\n};\n\nexports.removeMapFileComments = function (src) {\n  return src.replace(exports.mapFileCommentRegex, '');\n};\n\nexports.generateMapFileComment = function (file, options) {\n  var data = 'sourceMappingURL=' + file;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}